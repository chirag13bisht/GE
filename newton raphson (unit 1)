def newton_raphson(f, f_prime, x0, tolerance=1e-6, max_iterations=100):
    xn = x0
    for n in range(max_iterations):
        fxn = f(xn)
        if abs(fxn) < tolerance:
            print(f"Found solution after {n} iterations: {xn}")
            return xn
        f_prime_xn = f_prime(xn)
        if f_prime_xn == 0:
            print("Zero derivative. No solution found.")
            return None
        xn = xn - fxn / f_prime_xn
    print("Exceeded maximum iterations. No solution found.")
    return None
def f(x):
    return x**3 - x - 2
def f_prime(x):
    return 3*x**2 - 1

# Initial guess
x0 = 1.5

# Call the Newton-Raphson method
root = newton_raphson(f, f_prime, x0)
print("Root:", root)
