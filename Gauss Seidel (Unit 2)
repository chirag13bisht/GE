from prettytable import PrettyTable

def gauss_seidel(A, b, x0, tol=1e-10, max_iterations=8):
    n = len(A)
    x = x0.copy()
    
    table = PrettyTable()
    table.field_names = ["Iteration", "x1", "x2", "x3"]
    
    for k in range(max_iterations):
        x_new = x.copy()
        
        for i in range(n):
            sigma = sum(A[i][j] * x_new[j] for j in range(n) if j != i)
            x_new[i] = (b[i] - sigma) / A[i][i]
        
        # Stopping criterion
        if all(abs(x_new[i] - x[i]) < tol for i in range(n)):
            break
            
        table.add_row([k + 1] + x_new)
        x = x_new.copy()
    
    return x_new, table

# Example usage
A = [[4, -1, 0],
     [-1, 4, -1],
     [0, -1, 3]]
b = [15, 10, 10]
x0 = [0, 0, 0]

result_seidel, table_seidel = gauss_seidel(A, b, x0)
print("\nGauss-Seidel Result:")
print(table_seidel)
print("Final Result:", result_seidel)
