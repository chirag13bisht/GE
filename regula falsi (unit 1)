def regula_falsi(f, a, b, tol=1e-5, max_iter=100):
    if f(a) * f(b) > 0:
        raise ValueError("f(a) and f(b) must have opposite signs")

    iter_count = 0

    for _ in range(max_iter):
        iter_count += 1
        c = (a * f(b) - b * f(a)) / (f(b) - f(a))
        if f(c) == 0 or abs(f(c)) < tol:
            return c, iter_count

        if f(a) * f(c) < 0:
            b = c
        else:
            a = c

    raise ValueError("Failed to converge after {} iterations".format(max_iter))


# Example usage:
def f(x):
    return x**2 - 2

root, iterations = regula_falsi(f, 0, 2)
print("Approximate root:", root)
print("Number of iterations:", iterations)
